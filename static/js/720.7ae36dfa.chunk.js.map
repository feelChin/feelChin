{"version":3,"file":"static/js/720.7ae36dfa.chunk.js","mappings":"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","sources":["webpack://myreact/./src/components/head/index.module.scss?bdd4","components/head/index.js","components/learnWrapper/index.js","demo/tree/editInput.js","demo/tree/myCustomTreeNode.js","demo/tree/data.js","webpack://myreact/./src/demo/tree/index.module.scss?4e72","demo/tree/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"head\":\"head_head__yl3Oi\"};","import style from \"./index.module.scss\";\r\n\r\nfunction Head(props) {\r\n  const { title, back } = props;\r\n\r\n  return (\r\n    <div className={style.head}>\r\n      <i\r\n        className=\"iconfont icon-jiantou-copy\"\r\n        onClick={() => {\r\n          back();\r\n        }}\r\n      ></i>\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Head;\r\n","import { Children } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Head from \"../../components/head\";\r\n\r\nfunction App({ children }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const title = location.state?.title;\r\n\r\n  return (\r\n    <>\r\n      <Head\r\n        title={title}\r\n        back={() => {\r\n          navigate(-1);\r\n        }}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction EditInput(props) {\r\n  const { value, callback } = props;\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <input\r\n      defaultValue={value}\r\n      onBlur={(e) => {\r\n        callback(e.target.value);\r\n      }}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditInput;\r\n","class MyCustomTreeNode {\r\n  static addNode(key, data) {\r\n    data.forEach((item) => {\r\n      if (item.key === key) {\r\n        if (item.children) {\r\n          item.children.push({\r\n            value: \"自定义标题\",\r\n            key: key + \"-\" + item.children.length,\r\n            parentId: item.code,\r\n            code: new Date().getTime(),\r\n          });\r\n        } else {\r\n          item.children = [];\r\n          item.children.push({\r\n            value: \"自定义标题\",\r\n            key: key + \"-\" + item.children.length,\r\n            parentId: item.code,\r\n            code: new Date().getTime(),\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      if (item.children) {\r\n        MyCustomTreeNode.addNode(key, item.children);\r\n      }\r\n    });\r\n  }\r\n\r\n  static deleteNode(key, data) {\r\n    data.forEach((item, index) => {\r\n      if (item.key === key) {\r\n        data.splice(index, 1);\r\n        return;\r\n      }\r\n      if (item.children) {\r\n        MyCustomTreeNode.deleteNode(key, item.children);\r\n      }\r\n    });\r\n  }\r\n\r\n  static editNode(key, data) {\r\n    data.forEach((item) => {\r\n      if (item.key === key) {\r\n        item.isEditable = true;\r\n      } else {\r\n        item.isEditable = false;\r\n      }\r\n      if (item.children) {\r\n        MyCustomTreeNode.editNode(key, item.children);\r\n      }\r\n    });\r\n  }\r\n\r\n  static saveNode(key, data, newValue) {\r\n    data.forEach((item) => {\r\n      if (item.key === key) {\r\n        item.value = newValue;\r\n        item.isEditable = false;\r\n      }\r\n      if (item.children) {\r\n        MyCustomTreeNode.saveNode(key, item.children, newValue);\r\n      }\r\n    });\r\n  }\r\n\r\n  static findParent(key, data) {\r\n    for (let i in data) {\r\n      if (data[i].key === key) {\r\n        return [data[i]];\r\n      }\r\n      if (data[i].children) {\r\n        let result = MyCustomTreeNode.findParent(key, data[i].children);\r\n        if (result) {\r\n          return result.concat(data[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static insertNode(key, data) {\r\n    const find = MyCustomTreeNode.findParent(key, data);\r\n    const parent = find[1];\r\n    if (parent) {\r\n      const index = parent.children.findIndex((item, index) => {\r\n        return item.key === find[0].key;\r\n      });\r\n      parent.children.splice(index + 1, 0, {\r\n        value: \"自定义标题\",\r\n        parentId: parent.code,\r\n        code: new Date().getTime(),\r\n      });\r\n      parent.children.forEach((item, index) => {\r\n        item.key = parent.key + \"-\" + index;\r\n      });\r\n    } else {\r\n      const index = data.findIndex((item, index) => {\r\n        return item.key === find[0].key;\r\n      });\r\n      data.splice(index + 1, 0, {\r\n        value: \"自定义标题\",\r\n        parentId: 0,\r\n        code: new Date().getTime(),\r\n      });\r\n      data.forEach((item, index) => {\r\n        item.key = 0 + \"-\" + index;\r\n      });\r\n    }\r\n  }\r\n\r\n  onAdd(key, data, callback) {\r\n    MyCustomTreeNode.addNode(key, data);\r\n    callback(data);\r\n  }\r\n\r\n  onDelete(key, data, callback) {\r\n    MyCustomTreeNode.deleteNode(key, data);\r\n    callback(data);\r\n  }\r\n\r\n  onEdit(key, data, callback) {\r\n    MyCustomTreeNode.editNode(key, data);\r\n    callback(data);\r\n  }\r\n\r\n  onSave(key, data, newValue, callback) {\r\n    MyCustomTreeNode.saveNode(key, data, newValue);\r\n    callback(data);\r\n  }\r\n\r\n  onInsert(key, data, callback) {\r\n    MyCustomTreeNode.insertNode(key, data);\r\n    callback(data);\r\n  }\r\n}\r\n\r\nexport default new MyCustomTreeNode();\r\n","const treeData = [\r\n  {\r\n    title: \"成都市\",\r\n    value: \"成都市\",\r\n    key: \"0-0\",\r\n    code: 51001,\r\n    parentId: 0,\r\n    children: [\r\n      {\r\n        key: \"0-0-0\",\r\n        title: \"双流区\",\r\n        value: \"双流区\",\r\n        parentId: 51001,\r\n        code: 510011,\r\n      },\r\n      {\r\n        key: \"0-0-1\",\r\n        title: \"武侯区\",\r\n        value: \"武侯区\",\r\n        parentId: 51001,\r\n        code: 510012,\r\n      },\r\n      {\r\n        key: \"0-0-2\",\r\n        title: \"锦江区\",\r\n        value: \"锦江区\",\r\n        parentId: 51001,\r\n        code: 510013,\r\n      },\r\n      {\r\n        key: \"0-0-3\",\r\n        title: \"青羊区\",\r\n        value: \"青羊区\",\r\n        parentId: 51001,\r\n        code: 510014,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"0-1\",\r\n    title: \"眉山市\",\r\n    value: \"眉山市\",\r\n    parentId: 0,\r\n    code: 52001,\r\n    children: [\r\n      {\r\n        key: \"0-1-0\",\r\n        title: \"东坡区\",\r\n        value: \"东坡区\",\r\n        parentId: 52001,\r\n        code: 520011,\r\n        children: [\r\n          {\r\n            key: \"0-1-0-0\",\r\n            title: \"启明星花园\",\r\n            value: \"启明星花园\",\r\n            parentId: 520011,\r\n            code: 5200111,\r\n          },\r\n          {\r\n            key: \"0-1-0-1\",\r\n            title: \"云溪上\",\r\n            value: \"云溪上\",\r\n            parentId: 520011,\r\n            code: 5200112,\r\n          },\r\n          {\r\n            key: \"0-1-0-2\",\r\n            title: \"眉山市政府\",\r\n            value: \"眉山市政府\",\r\n            parentId: 520011,\r\n            code: 5200113,\r\n          },\r\n          {\r\n            key: \"0-1-0-3\",\r\n            title: \"万达广场\",\r\n            value: \"万达广场\",\r\n            parentId: 520011,\r\n            code: 5200114,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: \"0-1-1\",\r\n        title: \"仁寿县\",\r\n        value: \"仁寿县\",\r\n        parentId: 52001,\r\n        code: 520012,\r\n      },\r\n      {\r\n        key: \"0-1-2\",\r\n        title: \"丹棱县\",\r\n        value: \"丹棱县\",\r\n        parentId: 52001,\r\n        code: 520013,\r\n      },\r\n      {\r\n        key: \"0-1-3\",\r\n        title: \"青神县\",\r\n        value: \"青神县\",\r\n        parentId: 52001,\r\n        code: 520014,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default treeData;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tree\":\"tree_tree__1Wo3R\",\"treeWrapper\":\"tree_treeWrapper__woV1l\",\"item\":\"tree_item__T6iX2\",\"menu\":\"tree_menu__K6P6I\",\"title\":\"tree_title__5yUPs\"};","import { useState, useEffect } from \"react\";\r\nimport LearnWrapper from \"../../components/learnWrapper\";\r\nimport EditInput from \"./editInput\";\r\nimport MyCustomTreeNode from \"./myCustomTreeNode.js\";\r\nimport treeData from \"./data\";\r\nimport { Tree } from \"antd\";\r\nimport \"antd/lib/tree/style/index.css\";\r\nimport style from \"./index.module.scss\";\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nfunction Index() {\r\n  const [treeList, setTreeList] = useState([]);\r\n  const [initData, setInitData] = useState([]);\r\n  const [changeTree, setChangeTree] = useState(false);\r\n  const [saveDta, setSaveDta] = useState({\r\n    add: [],\r\n    remove: [],\r\n    edit: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const parse1 = JSON.parse(JSON.stringify(treeData));\r\n    const parse2 = JSON.parse(JSON.stringify(treeData));\r\n    setTreeList(parse1);\r\n    setInitData(parse2);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(saveDta);\r\n  }, [saveDta]);\r\n\r\n  function flatData(data, result = []) {\r\n    data.forEach((item) => {\r\n      result.push(item);\r\n      if (item.children) {\r\n        flatData(item.children, result);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function handleSaveButton() {\r\n    const saveArray = flatData(treeList);\r\n    const removeAddArray = flatData(treeList);\r\n    const initArray = flatData(initData);\r\n    const addResult = [];\r\n    const editResult = [];\r\n\r\n    function filterFnAdd() {\r\n      saveArray.forEach((item) => {\r\n        let bool = false;\r\n        initArray.forEach((initItem) => {\r\n          if (item.code === initItem.code) bool = true;\r\n        });\r\n        if (!bool) {\r\n          const data = {\r\n            value: item.value,\r\n            code: item.code,\r\n            key: item.key,\r\n            parentId: item.parentId,\r\n          };\r\n          addResult.push(data);\r\n        }\r\n      });\r\n    }\r\n\r\n    function filterFnEdit() {\r\n      saveArray.forEach((item) => {\r\n        let bool = false;\r\n        initArray.forEach((initItem) => {\r\n          if (item.code === initItem.code && item.value !== initItem.value)\r\n            bool = true;\r\n        });\r\n        if (bool) {\r\n          const data = {\r\n            value: item.value,\r\n            code: item.code,\r\n            key: item.key,\r\n            parentId: item.parentId,\r\n          };\r\n          editResult.push(data);\r\n        }\r\n      });\r\n    }\r\n\r\n    function filterFnRemoveAddResult() {\r\n      addResult.forEach((item) => {\r\n        removeAddArray.forEach((initItem, index) => {\r\n          if (item.code === initItem.code) {\r\n            removeAddArray.splice(index, 1);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function filterFnRemoveResult() {\r\n      removeAddArray.forEach((item) => {\r\n        initArray.forEach((initItem, index) => {\r\n          if (item.code === initItem.code) {\r\n            initArray.splice(index, 1);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    filterFnAdd();\r\n    filterFnEdit();\r\n    filterFnRemoveAddResult();\r\n    filterFnRemoveResult();\r\n\r\n    setSaveDta({\r\n      add: [...addResult],\r\n      edit: [...editResult],\r\n      remove: [...initArray],\r\n    });\r\n\r\n    alert(\r\n      `新增了${addResult.length}项 \\n 删除了${initArray.length}项 \\n 修改了${editResult.length}项 \\n`\r\n    );\r\n  }\r\n\r\n  function renderTreeNodes(data) {\r\n    return data.map((item) => {\r\n      item.title = (\r\n        <section className={style.item}>\r\n          {item.isEditable ? (\r\n            <div className={style.title}>\r\n              <EditInput\r\n                value={item.value}\r\n                callback={(value) => {\r\n                  MyCustomTreeNode.onSave(item.key, treeList, value, (data) => {\r\n                    setTreeList([...data]);\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className={style.title}>{item.value}</div>\r\n              <div className={style.menu}>\r\n                <div\r\n                  onClick={() => {\r\n                    MyCustomTreeNode.onEdit(item.key, treeList, (data) => {\r\n                      setTreeList([...data]);\r\n                    });\r\n                    if (!changeTree) setChangeTree(true);\r\n                  }}\r\n                >\r\n                  修\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    MyCustomTreeNode.onAdd(item.key, treeList, (data) => {\r\n                      setTreeList([...data]);\r\n                    });\r\n                    if (!changeTree) setChangeTree(true);\r\n                  }}\r\n                >\r\n                  增\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    MyCustomTreeNode.onDelete(item.key, treeList, (data) => {\r\n                      setTreeList([...data]);\r\n                    });\r\n                    if (!changeTree) setChangeTree(true);\r\n                  }}\r\n                >\r\n                  删\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    MyCustomTreeNode.onInsert(item.key, treeList, (data) => {\r\n                      setTreeList([...data]);\r\n                    });\r\n                    if (!changeTree) setChangeTree(true);\r\n                  }}\r\n                >\r\n                  插\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      );\r\n\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n\r\n      return <TreeNode title={item.title} key={item.key} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LearnWrapper>\r\n      <section className={`${style.tree} page`}>\r\n        {treeList.length && (\r\n          <Tree\r\n            className={style.treeWrapper}\r\n            style={{\r\n              height: \"80vh\",\r\n              overflow: \"auto\",\r\n            }}\r\n            defaultExpandedKeys={[\"0-1-0\"]}\r\n          >\r\n            {renderTreeNodes(treeList)}\r\n          </Tree>\r\n        )}\r\n\r\n        {changeTree && (\r\n          <button\r\n            onClick={() => {\r\n              handleSaveButton();\r\n            }}\r\n          >\r\n            保存列表\r\n          </button>\r\n        )}\r\n      </section>\r\n    </LearnWrapper>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"],"names":["props","title","back","className","style","onClick","children","navigate","useNavigate","useLocation","state","value","callback","inputRef","useRef","useEffect","current","focus","defaultValue","onBlur","e","target","ref","MyCustomTreeNode","key","data","addNode","deleteNode","editNode","newValue","saveNode","insertNode","forEach","item","push","length","parentId","code","Date","getTime","index","splice","isEditable","i","result","findParent","concat","find","parent","findIndex","TreeNode","Tree","useState","treeList","setTreeList","initData","setInitData","changeTree","setChangeTree","add","remove","edit","saveDta","setSaveDta","flatData","parse1","JSON","parse","stringify","treeData","parse2","console","log","height","overflow","defaultExpandedKeys","renderTreeNodes","map","dataRef","saveArray","removeAddArray","initArray","addResult","editResult","bool","initItem","alert","handleSaveButton"],"sourceRoot":""}